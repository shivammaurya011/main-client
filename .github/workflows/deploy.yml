name: Deploy Vite App to S3

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Determine environment and rename env file
        id: envinfo
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            cp .env.production .env
            echo "env=production" >> $GITHUB_OUTPUT
          else
            cp .env.development .env
            echo "env=development" >> $GITHUB_OUTPUT
          fi

      - name: Build the project
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            npm run build:prod
          else
            npm run build:dev
          fi
        env:
          NODE_ENV: ${{ steps.envinfo.outputs.env }}

      - name: Extract platform, environment folder, and CloudFront ID
        id: vars
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          PLATFORM=$(echo "$REPO_NAME" | sed 's/-client$//')
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            ENV_FOLDER="prod"
            CLOUDFRONT_ID="${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }}"
          else
            ENV_FOLDER="dev"
            CLOUDFRONT_ID="${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }}"
          fi
          S3_PATH="$PLATFORM/$ENV_FOLDER"
          echo "platform=$PLATFORM" >> $GITHUB_OUTPUT
          echo "env_folder=$ENV_FOLDER" >> $GITHUB_OUTPUT
          echo "s3_path=$S3_PATH" >> $GITHUB_OUTPUT
          echo "cloudfront_id=$CLOUDFRONT_ID" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify S3 access
        run: |
          echo "Listing bucket contents:"
          aws s3 ls s3://${{ secrets.AWS_S3_BUCKET }} || echo "Failed to list bucket"
          echo "Testing upload:"
          echo "test" > test.txt
          aws s3 cp test.txt s3://${{ secrets.AWS_S3_BUCKET }}/${{ steps.vars.outputs.s3_path }}/test.txt --sse AES256 || echo "Failed to upload test file"

      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ secrets.AWS_S3_BUCKET }}/${{ steps.vars.outputs.s3_path }} --delete --sse AES256 --debug

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.vars.outputs.cloudfront_id }} --paths "/*"